#Debian
export DEBEMAIL="ecliptik@gmail.com"
export DEBFULLNAME="Micheal Waltz"

#GIT
export GIT_SSL_NO_VERIFY=true
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
# Explicitly unset color (default anyhow). Use 1 to set it.
GIT_PS1_SHOWCOLORHINTS=
GIT_PS1_DESCRIBE_STYLE="branch"
GIT_PS1_SHOWUPSTREAM="auto git"

#Spaceship prompt
SPACESHIP_USER_SHOW=always
SPACESHIP_HOST_SHOW=false
SPACESHIP_DIR_TRUNC=3
SPACESHIP_DIR_TRUNC_REPO=false
SPACESHIP_CHAR_SYMBOL="ðŸš€âžœ "
SPACESHIP_VI_MODE_SHOW=false
SPACESHIP_PROMPT_ADD_NEWLINE=false

SPACESHIP_PROMPT_ORDER=(
  time          # Time stamps section
  user          # Username section
  dir           # Current directory section
  host          # Hostname section
  git           # Git section (git_branch + git_status)
  node          # Node.js section
  ruby          # Ruby section
  golang        # Go section
  php           # PHP section
  aws           # Amazon Web Services section
  pyenv         # Pyenv section
  kubecontext   # Kubectl context section
  terraform     # Terraform workspace section
  exec_time     # Execution time
  line_sep      # Line break
  jobs          # Background jobs indicator
  exit_code     # Exit code section
  char          # Prompt character
)

#KVM
export LIBVIRT_DEFAULT_URI=qemu:///system

#Java
JAVA_HOME="/opt/java/current"

#Setup VIM
export VISUAL=vi
export EDITOR=vi

LESS='-isgR'
export MANPAGER='less -isgR'

#Set locale
export LC_ALL=
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

#Set GOPATH
export GOPATH="${HOME}/work"
if [ ! -d "${GOPATH}" ]; then
    mkdir -p "${GOPATH}"
fi

#If the user doesn't have a .inputrc, use the one in /etc.
if [ ! -r "${HOME}/.inputrc" ]; then
    export INPUTRC=/etc/inputrc
fi

#Determine OS information
os_name_generic=`uname -s`
arch=`uname -m`

#Set vars depending on OS
case ${os_name_generic} in
    Darwin*)
        PATH="${HOME}/bin:${HOME}/bin/platform-tools:${HOME}/.okta/bin:${KREW_ROOT:-$HOME/.krew}/bin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/gnu-tar/libexec/gnubin:/usr/local/opt/coreutils/libexec/gnubin:$HOME/.rvm/bin:${HOME}/.vimpkg/bin:${HOME}/Library/Python/3.7/bin:$PATH"
        MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
        distro_name=`sw_vers -productName | sed -e "s/\ //g"`
        distro_version=`sw_vers -productVersion`
        os_name="${distro_name}-${distro_version}"

        #Setup ssh config for macos
        export GPG_TTY=$(tty)
        export SSH_AUTH_SOCK=${HOME}/.gnupg/S.gpg-agent.ssh

        #pyenv setup
        export PATH="$(pyenv root)/shims:$PATH"
    ;;
    Linux*)
        PATH="${HOME}/bin:$JAVA_HOME/bin:/usr/local/bin:/usr/local/sbin:/bin:/usr/bin:/sbin:/usr/sbin:$PATH"
        distro_name=`lsb_release -is`
        distro_version=`lsb_release -rs`
        os_name="${distro_name}-${distro_version}"

        #pyenv setup
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        if command -v pyenv 1>/dev/null 2>&1; then
            eval "$(pyenv init -)"
        fi
    ;;
    SunOS*)
        os_name=`uname -r | sed -e 's/^5.\([56]\)/2.\1/' -e 's/^5.//' -e 's/^/solaris/'`
        #Define TERM for Solaris since it doesn't have a termcap for xterm-256color
        TERM="xterm"
        stty erase '^?'
    ;;
esac

#Set kubectl configs
export KUBECONFIG=$HOME/.kube/config

#enable kuberenets completion
source <(kubectl completion zsh)

#Enable aws completion if file is present
if [ -f /usr/local/share/zsh/site-functions ]; then
    source /usr/local/share/zsh/site-functions
fi
